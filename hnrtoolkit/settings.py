"""
Django settings for hnrtoolkit project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import dj_database_url

#Intenentamos con un BLOG -http://blog.xjtian.com/post/52685286308/serving-static-files-in-django-more-complicated,
#explica otra forma de referenciar las diferentes staticfiles y sus DIRS a traves de las aplicaciones.

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm9)5#@ike)y*b36nopfz^yjey$a^h3i0x^39(1v%=6wm%*)ezh'

# SECURITY WARNING: don't run with debug turned on in production!
##TOGLEAR PARA PROBAR FUNCIONAMIENTO LOCAL,  SI HAY ALGO MAL, NOS MUESTRA 505
DEBUG = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hnrtoolkit',
    'todo',
    'blog',
    'whitenoise.runserver_nostatic',
    


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hnrtoolkit.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hnrtoolkit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

#### 

#ARREGLOS DE BASE DE DATOS, Y STATIC FILES.

####
DATABASES = {
    'default': dj_database_url.config()
}
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

#Esta linea de codigo requiere configurar el STATIC_ROOT 
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#Proxy ??
SECURE_PROXY_SSL_HEADER = ('HHTP_X_FORWARDED_PROTO','https')


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

ALLOWED_HOSTS = ['*']



#SET STATIC ROOT (VER WHITENOISE)
STATIC_URL = '/static/'
STATIFILES_DIRS = [
    'static',
    os.path.join(BASE_DIR, 'static'),
    
]

######METODO BLOG#######

# from Unipath import Path

# PROJECT_DIR = Path(__file__).ancestor(3)

# STATICFILES_DIRS = (
#     PROJECT_DIR.child("assets"),
#     PROJECT_DIR,
# )
######CIERRE METODO BLOG#####
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

#PARA ALMACENAR MEDIA TEMPORAL CREADA DINAMICAMENTE

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Config BUSCADORES DE Static Files 
# [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# ]

try:
    from .local_settings import *
    print("LOCAL_SETTINGS.PY, DEBUG=TRUE")
except ImportError:
    print("SETTINGS.PY, DEBUG=FALSE")
